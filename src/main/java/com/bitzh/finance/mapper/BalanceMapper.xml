<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitzh.finance.mapper.BalanceMapper">
    <resultMap id="BaseResultMap" type="com.bitzh.finance.entity.Balance">
        <id column="userId" jdbcType="INTEGER" property="userid"/>
        <result column="balance" jdbcType="DECIMAL" property="balance"/>
    </resultMap>
    <resultMap id="BaseResultMapWithUser" type="com.bitzh.finance.entity.Balance">
        <id column="userId" jdbcType="INTEGER" property="userid"/>
        <result column="balance" jdbcType="DECIMAL" property="balance"/>
        <!-- 指定联合查询用户字段的封装 -->
        <association property="user"
                     javaType="com.bitzh.finance.entity.User">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <result column="username" jdbcType="VARCHAR" property="username"/>
            <result column="realname" jdbcType="VARCHAR" property="realname"/>
            <result column="password" jdbcType="VARCHAR" property="password"/>
            <result column="IDcard" jdbcType="VARCHAR" property="idcard"/>
            <result column="phone" jdbcType="VARCHAR" property="phone"/>
            <result column="email" jdbcType="VARCHAR" property="email"/>
            <result column="paypwd" jdbcType="INTEGER" property="paypwd"/>
            <result column="status" jdbcType="INTEGER" property="status"/>
            <result column="reputation" jdbcType="VARCHAR" property="reputation"/>
        </association>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        userId
        , balance
    </sql>
    <sql id="Base_Column_List_With_User">
        b
        .
        userId
        , b.balance,
    u.id, u.username, u.realname, u.password, u.IDcard, u.phone, u.email, u.paypwd, u.status, u.reputation
    </sql>
    <select id="selectByExampleWithUser" parameterType="com.bitzh.finance.entity.BalanceExample"
            resultMap="BaseResultMapWithUser">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List_With_User"/>
        from balance b left join user u on b.userId=u.id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.bitzh.finance.entity.BalanceExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from balance
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from balance
        where userId = #{userid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from balance
        where userId = #{userid,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.bitzh.finance.entity.BalanceExample">
        delete from balance
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.bitzh.finance.entity.Balance">
        insert into balance (userId, balance)
        values (#{userid,jdbcType=INTEGER}, #{balance,jdbcType=DECIMAL})
    </insert>
    <insert id="insertSelective" parameterType="com.bitzh.finance.entity.Balance">
        insert into balance
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                userId,
            </if>
            <if test="balance != null">
                balance,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="balance != null">
                #{balance,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bitzh.finance.entity.BalanceExample" resultType="java.lang.Long">
        select count(*) from balance
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update balance
        <set>
            <if test="record.userid != null">
                userId = #{record.userid,jdbcType=INTEGER},
            </if>
            <if test="record.balance != null">
                balance = #{record.balance,jdbcType=DECIMAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update balance
        set userId = #{record.userid,jdbcType=INTEGER},
        balance = #{record.balance,jdbcType=DECIMAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bitzh.finance.entity.Balance">
        update balance
        <set>
            <if test="balance != null">
                balance = #{balance,jdbcType=DECIMAL},
            </if>
        </set>
        where userId = #{userid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bitzh.finance.entity.Balance">
        update balance
        set balance = #{balance,jdbcType=DECIMAL}
        where userId = #{userid,jdbcType=INTEGER}
    </update>
    <update id="Add">
        update balance
        set balance = balance + #{amount,jdbcType=DECIMAL}
        where userId = #{userId,jdbcType=INTEGER}
    </update>
    <update id="Sub">
        update balance
        set balance = balance - #{withdrawamount,jdbcType=DECIMAL}
        where userId = #{userId,jdbcType=INTEGER}
    </update>
    <update id="consume">
        update balance
        set balance = balance - #{monetary,jdbcType=DECIMAL}
        where userId = #{userId,jdbcType=INTEGER}
    </update>
</mapper>